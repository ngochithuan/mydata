# -*- coding: utf-8 -*-
"""Lab08.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GG_WYWwYsaw9CAydpOUROcOeckfPKxeN
"""

#Exercise 1
import sympy as sp
import numpy as np
from matplotlib import pyplot as plt

f1axy = lambda x, y: x**2 +x*y**3
f1axyz = lambda x, y, z: (x - y)/(y**2 + z**2)

x0 = -3
y0 = -2

f1ax0_y0 = f1axy(x0,y0)
print("f1axy(0,0): ", f1axy(0,0))
print("f1axy(-1,1): ",f1axy(-1,1))
print("f1axy(2,3): ",f1axy(2,3))
print("f1axy(-3,-2): ", f1ax0_y0)
print("--------------------------")

print("f1axyz(3, -1, 2): ",f1axyz(3, -1, 2))
print("f1axyz(1, 1/2, 1/4): ",f1axyz(1, 1/2, 1/4))
print("f1axyz(0, -1/3, 0): ",f1axyz(0, -1/3, 0))
print("f1axyz(2, 2, 100): ",f1axyz(2, 2, 100))

#Exercise 2

import sympy as sp
import numpy as np
from matplotlib import pyplot as plt
import math as m

z_func = lambda x, y: np.cos(x)*np.cos(y)*m.e**(-np.sqrt(x**2 + y**2)/4)

x = np.arange(-6, 6.1, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)

Z = z_func(X, Y)
ax = plt.axes(projection ='3d')
ax.plot_surface(X, Y, Z, cmap = 'plasma', linewidth=9)
ax.set_title('Surface plot 2a')
plt.show()
##############################################################################

z_func = lambda x, y: -((x*y**2)/(x**2+y**2))

x = np.arange(-6, 6.1, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)

Z = z_func(X, Y)
ax = plt.axes(projection ='3d')
ax.plot_surface(X, Y, Z, cmap = 'Purples', linewidth=9)
ax.set_title('Surface plot 2b')
plt.show()
##############################################################################

z_func = lambda x, y: (x*y*(x**2 - y**2))/(x**2 + y**2)

x = np.arange(-6, 6.1, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)

Z = z_func(X, Y)
ax = plt.axes(projection ='3d')
ax.plot_surface(X, Y, Z, cmap = 'Blues', linewidth=9)
ax.set_title('Surface plot 2c')
plt.show()
##############################################################################

z_func = lambda x, y: y**2 - y**4 - x**2

x = np.arange(-6, 6.1, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)

Z = z_func(X, Y)
ax = plt.axes(projection ='3d')
ax.plot_surface(X, Y, Z, cmap = 'Greens', linewidth=9)
ax.set_title('Surface plot 2c')
plt.show()

#Exercise 3

import sympy as sp
import numpy as np
from matplotlib import pyplot as plt
import math as m

#3a
x, y = sp.symbols('x y')
fz = 2*x**2 - 3*y - 4
dfzx = sp.diff(fz, x, 1)
dfzy = sp.diff(fz, y, 1)

z_func = lambda x, y: 2*x**2 - 3*y - 4
x = np.arange(-6, 6.1, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)

Z = z_func(X, Y)
ax = plt.axes(projection ='3d')
ax.plot_surface(X, Y, Z, cmap = 'plasma', linewidth=9)
ax.set_title('Surface plot 3a')

z_dx = lambda x, y: 4*x
z_dy = lambda x, y: -3 + 0*y

Zx = z_dx(X, Y)
Zy = z_dy(X, Y)
ax.plot_surface(X, Y, Zx, cmap = 'GnBu', linewidth=9)
ax.plot_surface(X, Y, Zy, cmap = 'winter', linewidth=9)

plt.show()


#3b
x, y = sp.symbols('x y')
fz = (x**2 - 1)*(y + 2)
dfzx = sp.diff(fz, x, 1)
dfzy = sp.diff(fz, y, 1)

z_func = lambda x, y: (x**2 - 1)*(y + 2)
x = np.arange(-6, 6.1, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)

Z = z_func(X, Y)
ax = plt.axes(projection ='3d')
ax.plot_surface(X, Y, Z, cmap = 'plasma', linewidth=9)
ax.set_title('Surface plot 3b')

z_dx = lambda x, y: 2*x*(y+2)
z_dy = lambda x, y: x**2 - 1

Zx = z_dx(X, Y)
Zy = z_dy(X, Y)
ax.plot_surface(X, Y, Zx, cmap = 'GnBu', linewidth=9)
ax.plot_surface(X, Y, Zy, cmap = 'winter', linewidth=9)

plt.show()

#3c
x, y = sp.symbols('x y')
fz = x**2 - x*y + y**2
dfzx = sp.diff(fz, x, 1)
dfzy = sp.diff(fz, y, 1)

z_func = lambda x, y: x**2 - x*y + y**2
x = np.arange(-6, 6.1, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)

Z = z_func(X, Y)
ax = plt.axes(projection ='3d')
ax.plot_surface(X, Y, Z, cmap = 'plasma', linewidth=9)
ax.set_title('Surface plot 3c')

z_dx = lambda x, y: 2*x - y
z_dy = lambda x, y: -x + 2*y

Zx = z_dx(X, Y)
Zy = z_dy(X, Y)
ax.plot_surface(X, Y, Zx, cmap = 'GnBu', linewidth=9)
ax.plot_surface(X, Y, Zy, cmap = 'winter', linewidth=9)

plt.show()

#3d
x, y = sp.symbols('x y')
fz = 5*x*y - 7*x**2 - y**2 + 3*x - 6*y + 2
dfzx = sp.diff(fz, x, 1)
dfzy = sp.diff(fz, y, 1)

z_func = lambda x, y: 5*x*y - 7*x**2 - y**2 + 3*x - 6*y + 2
x = np.arange(-6, 6.1, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)

Z = z_func(X, Y)
ax = plt.axes(projection ='3d')
ax.plot_surface(X, Y, Z, cmap = 'plasma', linewidth=9)
ax.set_title('Surface plot 3d')

z_dx = lambda x, y: -14*x + 5*y + 3
z_dy = lambda x, y: 5*x - 2*y - 6

Zx = z_dx(X, Y)
Zy = z_dy(X, Y)
ax.plot_surface(X, Y, Zx, cmap = 'GnBu', linewidth=9)
ax.plot_surface(X, Y, Zy, cmap = 'winter', linewidth=9)

plt.show()

#3e
x, y = sp.symbols('x y')
fz = (x*y - 1)**2
dfzx = sp.diff(fz, x, 1)
dfzy = sp.diff(fz, y, 1)

z_func = lambda x, y: (x*y - 1)**2
x = np.arange(-6, 6.1, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)

Z = z_func(X, Y)
ax = plt.axes(projection ='3d')
ax.plot_surface(X, Y, Z, cmap = 'plasma', linewidth=9)
ax.set_title('Surface plot 3e')

z_dx = lambda x, y: 2*y*(x*y - 1)
z_dy = lambda x, y: 2*y*(x*y - 1)

Zx = z_dx(X, Y)
Zy = z_dy(X, Y)
ax.plot_surface(X, Y, Zx, cmap = 'GnBu', linewidth=9)
ax.plot_surface(X, Y, Zy, cmap = 'winter', linewidth=9)

plt.show()

#3f
x, y = sp.symbols('x y')
fz = (2*x - 3*y)**3
dfzx = sp.diff(fz, x, 1)
dfzy = sp.diff(fz, y, 1)

z_func = lambda x, y: (2*x - 3*y)**3
x = np.arange(-6, 6.1, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)

Z = z_func(X, Y)
ax = plt.axes(projection ='3d')
ax.plot_surface(X, Y, Z, cmap = 'plasma', linewidth=9)
ax.set_title('Surface plot 3f')

z_dx = lambda x, y: 6*(2*x - 3*y)**2
z_dy = lambda x, y: -9*(2*x - 3*y)**2

Zx = z_dx(X, Y)
Zy = z_dy(X, Y)
ax.plot_surface(X, Y, Zx, cmap = 'GnBu', linewidth=9)
ax.plot_surface(X, Y, Zy, cmap = 'winter', linewidth=9)

plt.show()

#3g
x, y = sp.symbols('x y')
fz = (x**2 + y**2)**(1/2)
dfzx = sp.diff(fz, x, 1)
dfzy = sp.diff(fz, y, 1)

z_func = lambda x, y: (x**2 + y**2)**(1/2)
x = np.arange(-6, 6.1, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)

Z = z_func(X, Y)
ax = plt.axes(projection ='3d')
ax.plot_surface(X, Y, Z, cmap = 'plasma', linewidth=9)
ax.set_title('Surface plot 3g')

z_dx = lambda x, y: 1.0*x/(x**2 + y**2)**0.5
z_dy = lambda x, y: 1.0*y/(x**2 + y**2)**0.5

Zx = z_dx(X, Y)
Zy = z_dy(X, Y)
ax.plot_surface(X, Y, Zx, cmap = 'GnBu', linewidth=9)
ax.plot_surface(X, Y, Zy, cmap = 'winter', linewidth=9)

plt.show()

#3h
x, y = sp.symbols('x y')
fz = (x**3 + (y/2))**(2/3)
dfzx = sp.diff(fz, x, 1)
dfzy = sp.diff(fz, y, 1)

z_func = lambda x, y: (x**3 + (y/2))**(2/3)
x = np.arange(1, 10, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)

Z = z_func(X, Y)
ax = plt.axes(projection ='3d')
ax.plot_surface(X, Y, Z, cmap = 'plasma', linewidth=9)
ax.set_title('Surface plot 3h')

z_dx = lambda x, y: 2.0*x**2/(x**3 + y/2)**0.3
z_dy = lambda x, y:(1/3)/(x**3 + y/2)**0.3

Zx = z_dx(X, Y)
Zy = z_dy(X, Y)
ax.plot_surface(X, Y, Zx, cmap = 'GnBu', linewidth=9)
ax.plot_surface(X, Y, Zy, cmap = 'winter', linewidth=9)

plt.show()

#3i
x, y = sp.symbols('x y')
fz = 1/(x+y)
dfzx = sp.diff(fz, x, 1)
dfzy = sp.diff(fz, y, 1)

z_func = lambda x, y: 1/(x+y)
x = np.arange(-10, 10, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)

Z = z_func(X, Y)
ax = plt.axes(projection ='3d')
ax.plot_surface(X, Y, Z, cmap = 'plasma', linewidth=9)
ax.set_title('Surface plot 3i')

z_dx = lambda x, y: -1/(x + y)**2
z_dy = lambda x, y: -1/(x + y)**2

Zx = z_dx(X, Y)
Zy = z_dy(X, Y)
ax.plot_surface(X, Y, Zx, cmap = 'GnBu', linewidth=9)
ax.plot_surface(X, Y, Zy, cmap = 'winter', linewidth=9)

plt.show()

#3j
x, y = sp.symbols('x y')
fz = x/(x**2 + y**2)
dfzx = sp.diff(fz, x, 1)
dfzy = sp.diff(fz, y, 1)

z_func = lambda x, y: x/(x**2 + y**2)
x = np.arange(1, 10, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)

Z = z_func(X, Y)
ax = plt.axes(projection ='3d')
ax.plot_surface(X, Y, Z, cmap = 'plasma', linewidth=9)
ax.set_title('Surface plot 3j')

z_dx = lambda x, y: -2*x**2/(x**2 + y**2)**2 + 1/(x**2 + y**2)
z_dy = lambda x, y: -2*x*y/(x**2 + y**2)**2

Zx = z_dx(X, Y)
Zy = z_dy(X, Y)
ax.plot_surface(X, Y, Zx, cmap = 'GnBu', linewidth=9)
ax.plot_surface(X, Y, Zy, cmap = 'winter', linewidth=9)

plt.show()

#Exercise 4

import sympy as sp
import numpy as np
from matplotlib import pyplot as plt
import math as m

#4a
x, y = sp.symbols('x y')
fz = x + y + x*y
dfzx = sp.diff(fz, x, 2)
dfzy = sp.diff(fz, y, 2)
dfzx1 = sp.diff(fz, x, 1)
dfzxy = sp.diff(fz, y, 1)

z_func = lambda x, y: x + y + x*y
x = np.arange(-6, 6.1, 0.1)
y = x.copy()
X, Y = np.meshgrid(x, y)

Z = z_func(X, Y)
ax = plt.axes(projection ='3d')
ax.plot_surface(X, Y, Z, cmap = 'plasma', linewidth=9)
ax.set_title('Surface plot 4a')

z_dx = lambda x, y: 0 + 0*x + 0*y
z_dy = lambda x, y: 0 + 0*x + 0*y
z_dz = lambda x, y: 1 + 0*x + 0*y

Zx = z_dx(X, Y)
Zy = z_dy(X, Y)
Zz = z_dz(X, Y)
ax.plot_surface(X, Y, Zx, cmap = 'GnBu', linewidth=9)
ax.plot_surface(X, Y, Zy, cmap = 'winter', linewidth=9)
ax.plot_surface(X, Y, Zz, cmap = 'cool', linewidth=9)
plt.show()

#4b
x, y = sp.symbols('x y')

z_func = sp.sin(x*y)
dx = z_func.diff(x,2)
dy = z_func.diff(y,2)


x = np.arange(0,2*np.pi,np.pi/4)
y = x.copy()
z_funct = lambda x, y: np.sin(x*y)
f_dx = lambda x, y: -y**2*np.sin(x*y)
f_dy = lambda x, y: -x**2*np.sin(x*y)


X, Y = np.meshgrid(x, y)

Z = z_funct(X, Y)
Z1 = f_dx(X, Y)
Z2 = f_dy(X, Y)

ax = plt.axes(projection = '3d')
ax.plot_surface(X, Y, Z, cmap = 'plasma', linewidth = 9)
ax.plot_surface(X, Y, Z1, cmap = 'spring', linewidth = 9)
ax.plot_surface(X, Y, Z2, cmap = 'winter', linewidth = 9)

ax.set_title('Surface plot')
plt.show()

#4c
x, y = sp.symbols('x y')

z_func = x**(2)*y + sp.cos(y) + y*sp.sin(x)
dx = z_func.diff(x,2)
dy = z_func.diff(y,2)

x = np.arange(0,2*np.pi,np.pi/4)
y = x.copy()
z_funct = lambda x, y: x**2*y + np.cos(y) + y*np.sin(x)
f_dx = lambda x, y: y*(2 - np.sin(x))
f_dy = lambda x, y: -np.cos(y)

X, Y = np.meshgrid(x, y)

Z = z_funct(X, Y)
Z1 = f_dx(X, Y)
Z2 = f_dy(X, Y)

ax = plt.axes(projection = '3d')
ax.plot_surface(X, Y, Z, cmap = 'plasma', linewidth = 9)
ax.plot_surface(X, Y, Z1, cmap = 'spring', linewidth = 9)
ax.plot_surface(X, Y, Z2, cmap = 'winter', linewidth = 9)

ax.set_title('Surface plot 4c')
plt.show()


#4d
x, y = sp.symbols('x y')

z_func = x*m.e**y + y + 1
print("f4x = x*sp.e**y + y + 1")
dx = z_func.diff(x,2)
dy = z_func.diff(y,2)
print("f'x =", dx)
print("f'y =", dy)

x = np.arange(1,6,0.1)
y = x.copy()
z_funct = lambda x, y: x*np.e**y + y + 1
f_dx = lambda x, y: 0*x
f_dy = lambda x, y:  1.0*2.718281**y*x


X, Y = np.meshgrid(x, y)

Z = z_funct(X, Y)
Z1 = f_dx(X, Y)
Z2 = f_dy(X, Y)

ax = plt.axes(projection = '3d')
ax.plot_surface(X, Y, Z, cmap = 'plasma', linewidth = 9)
ax.plot_surface(X, Y, Z1, cmap = 'spring', linewidth = 9)
ax.plot_surface(X, Y, Z2, cmap = 'winter', linewidth = 9)

ax.set_title('Surface plot 4d')
plt.show()

#Exercise 5

import sympy as sp
import numpy as np
from matplotlib import pyplot as plt
import math as m

#5a
f_5a = lambda x, y: x*sp.sin(y) + y*sp.sin(x) + x*y

x1, y1 = sp.symbols("x1 y1")
if str(f_5a(x1,y1)) == str(f_5a(y1,x1)):
  print("a). f(x,y) = f(y,x)")
else:
  print("a). f(x,y) <> f(y,x)")